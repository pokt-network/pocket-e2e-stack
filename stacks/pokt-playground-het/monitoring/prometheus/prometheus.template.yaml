# my global config
# REF: https://github.com/PagerTree/prometheus-grafana-alertmanager-example/blob/master/prometheus/prometheus.yml
global:
  scrape_interval: 15s # By default, scrape targets every 15 seconds.
  evaluation_interval: 15s # By default, scrape targets every 15 seconds.
  # scrape_timeout is set to the global default (10s).

  # Attach these labels to any time series or alerts when communicating with
  # external systems (federation, remote storage, Alertmanager).
  external_labels:
    monitor: "my-project"

# Load and evaluate rules in this file every 'evaluation_interval' seconds.
rule_files:
  - "alert.rules"
  # - "first.rules"
  # - "second.rules"

# alert
alerting:
  alertmanagers:
    - scheme: http
      static_configs:
        - targets:
            - "alertmanager:9093"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: "prometheus"
    # Override the global default and scrape targets from this job every 5 seconds.
    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.
    #
    scrape_interval: 5s

    static_configs:
      - targets:
          [
            "localhost:9090",
            "cadvisor:8080",
            "node-exporter:9100",
            "nginx-exporter:9113",
            "node1.dev.pokt:26660",
            "node2.dev.pokt:26660",
            "node3:26660",
            "node4:26660",
            "140.82.25.143:9100",
          ]

  - job_name: "pocket-validators"
    scrape_interval: 5s
    static_configs:
      - targets: { { config.NODE_DOMAINS } }

  - job_name: "blackbox"
    metrics_path: /probe
    params:
      module: [http_2xx] # Look for a HTTP 200 response.
    static_configs:
      - targets:
          - https://prometheus.io

    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: "blackbox_exporter:9115" # Blackbox exporter.
      - target_label: region
        replacement: "local"
