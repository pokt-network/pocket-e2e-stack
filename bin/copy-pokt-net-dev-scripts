#!/usr/env/bin bash

if [ -z "$CWD" ]; then
  echo "CWD  env var is required, none was exported"
  exit 1
fi

if [ -z "$POCKET_CORE_REPO_PATH" ]; then
  echo "POCKET_CORE_REPO_PATH env var is required, none was exported"
  exit 1
fi

if [ -z $1 ]; then
  echo "Missing first argument: env"
  exit 1
fi

if [ $1 == "dev-tm" ]; then
  echo "Using the dev-tm env"
  SCRIPTS=(
    "$CWD/docker/pokt-net/$1/install-deps.sh" "$CWD/docker/pokt-net/$1/watch.sh" "$CWD/docker/pokt-net/$1/entrypoint-dev.sh" "$CWD/docker/pokt-net/$1/command.sh" "$CWD/docker/pokt-net/$1/go.mod.local" "$CWD/docker/pokt-net/$1/prepare-tendermint.sh" "$CWD/docker/pokt-net/$1/go.mod.tendermint"
  )
else
  SCRIPTS=(
    "$CWD/docker/pokt-net/$1/install-deps.sh" "$CWD/docker/pokt-net/$1/watch.sh" "$CWD/docker/pokt-net/$1/entrypoint-dev.sh" "$CWD/docker/pokt-net/$1/command.sh"
  )
fi

PRINT_SCRIPTS() {
  for i in "${!SCRIPTS[@]}"; do
    echo "- ${SCRIPTS[i]}"
  done
}

PRINTED_SCRIPTS=$(PRINT_SCRIPTS)
read -p "This command will try to copy the following scripts to $POCKET_CORE_REPO_PATH:

$PRINTED_SCRIPTS

  would you like to continue [Y/n]: " continueScript

if [ "$continueScript" = "n" ] || [ "$continueScript" = "N" ]; then
  echo "Not copying"
else
  for i in "${!SCRIPTS[@]}"; do
    echo "Copying... ${SCRIPTS[i]}"
    cp ${SCRIPTS[i]} $POCKET_CORE_REPO_PATH
    if [ $? -eq 1 ]; then
      echo "Failed to copy ${SCRIPTS[i]} to $POCKET_CORE_REPO_PATH..."
    else
      echo "Successfully copied ${SCRIPTS[i]} to $POCKET_CORE_REPO_PATH..."
    fi
  done
fi
